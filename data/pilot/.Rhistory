data$z4 <- scale(data$abs_qu_4)
# save the z-scores in a new variable based on whether
# the anchor of the respective question has been low or high
# setting those variable to NA where the other anchor has been given
data <- data %>%
rowwise() %>%
mutate(
z1L = ifelse(anchor1 == 0, z1, NA),
z1H = ifelse(anchor1 == 1, z1, NA),
z2L = ifelse(anchor2 == 0, z2, NA),
z2H = ifelse(anchor2 == 1, z2, NA),
z3L = ifelse(anchor3 == 0, z3, NA),
z3H = ifelse(anchor3 == 1, z3, NA),
z4L = ifelse(anchor4 == 0, z4, NA),
z4H = ifelse(anchor4 == 1, z4, NA)
) %>%
select(VP, z1L:z4H) %>%
mutate(mean_zL = mean(c(z1L, z2L, z3L, z4L), na.rm = TRUE),
mean_zH = mean(c(z1H, z2H, z3H, z4H), na.rm = TRUE))
#setting absolute answer to null such that they aren't displayed anymore,
#data$abs_qu_1 <- NULL
#data$abs_qu_2 <- NULL
#data$abs_qu_3 <- NULL
#data$abs_qu_4 <- NULL
# check for normality
diff <- data$mean_zH - data$mean_zL
shapiro.test(diff)
# paired t-test based on difference between z- scores
# from the low vs high anchor condition
t.test(data$mean_zL,data$mean_zH,paired=TRUE, alternative = "less")
# paired t-test based on difference between z- scores
# from the low vs high anchor condition
t.test(data$mean_zL,data$mean_zH,alternative = "less",paired=TRUE)
t.test(data$mean_zL,data$mean_zH,alternative = "less",paired=TRUE)
# paired t-test based on difference between z- scores
# from the low vs high anchor condition
t.test(data$mean_zL, y =data$mean_zH,alternative = "less",paired=TRUE)
# paired t-test based on difference between z- scores
# from the low vs high anchor condition
t.test(x = data$mean_zL, y = data$mean_zH,alternative = "less",paired=TRUE)
# paired t-test based on difference between z- scores
# from the low vs high anchor condition
t.test(data$mean_zL, y = "data$mean_zH", alternative = "less",paired=TRUE)
# paired t-test based on difference between z- scores
# from the low vs high anchor condition
t.test(data$mean_zL, y = data$mean_zH, alternative = "less",paired=TRUE)
# paired t-test based on difference between z- scores
# from the low vs high anchor condition
t.test(data$mean_zL, y = mean_zH, alternative = "less",paired=TRUE)
# paired t-test based on difference between z- scores
# from the low vs high anchor condition
t.test(data$mean_zL, y = data$mean_zH, alternative = "less",paired=TRUE)
# creating a fake data set
columns <- c("comparative_qu_1","abs_qu_1","anchor1","comparative_qu_2","abs_qu_2","anchor2","comparative_qu_3","abs_qu_3","anchor3","comparative_qu_4","abs_qu_4","anchor4")
VP <- c("A","B","C","D","E")
abs_qu_1 <- c(9000,7500,6000,10000,5000)
anchor1 <- c(1,1,0,1,0)
abs_qu_2 <- c(350, 500, 280, 600, 400)
anchor2 <- c(1,1,0,1,0)
abs_qu_3 <- c(17, 25, 50, 30, 45)
anchor3 <- c(0,0,1,0,1)
abs_qu_4 <- c(4,5,9,4,8)
anchor4 <- c(0,0,1,0,1)
# creating a data frame from the fake data
data <- data.frame(VP,abs_qu_1, anchor1, abs_qu_2, anchor2, abs_qu_3, anchor3, abs_qu_4, anchor4)
# z transform all answer based on the questions' mean
data$z1 <- scale(data$abs_qu_1)
data$z2 <- scale(data$abs_qu_2)
data$z3 <- scale(data$abs_qu_3)
data$z4 <- scale(data$abs_qu_4)
# save the z-scores in a new variable based on whether
# the anchor of the respective question has been low or high
# setting those variable to NA where the other anchor has been given
data <- data %>%
rowwise() %>%
mutate(
z1L = ifelse(anchor1 == 0, z1, NA),
z1H = ifelse(anchor1 == 1, z1, NA),
z2L = ifelse(anchor2 == 0, z2, NA),
z2H = ifelse(anchor2 == 1, z2, NA),
z3L = ifelse(anchor3 == 0, z3, NA),
z3H = ifelse(anchor3 == 1, z3, NA),
z4L = ifelse(anchor4 == 0, z4, NA),
z4H = ifelse(anchor4 == 1, z4, NA)
) %>%
select(VP, z1L:z4H) %>%
mutate(mean_zL = mean(c(z1L, z2L, z3L, z4L), na.rm = TRUE),
mean_zH = mean(c(z1H, z2H, z3H, z4H), na.rm = TRUE))
#setting absolute answer to null such that they aren't displayed anymore,
#data$abs_qu_1 <- NULL
#data$abs_qu_2 <- NULL
#data$abs_qu_3 <- NULL
#data$abs_qu_4 <- NULL
# check for normality
diff <- data$mean_zH - data$mean_zL
shapiro.test(diff)
# paired t-test based on difference between z- scores
# from the low vs high anchor condition
t.test(data$mean_zL, y = data$mean_zH, alternative = "less",paired=TRUE)
select(VP, z1L:z4H) %>%
mutate(mean_zL = mean(c(z1L, z2L, z3L, z4L), na.rm = TRUE),
mean_zH = mean(c(z1H, z2H, z3H, z4H), na.rm = TRUE))
select(VP, z1L:z4H) %>%
mutate(mean_zL = mean(c(z1L, z2L, z3L, z4L), na.rm = TRUE),
mean_zH = mean(c(z1H, z2H, z3H, z4H), na.rm = TRUE))
data <- data %>%
rowwise() %>%
mutate(
z1L = ifelse(anchor1 == 0, z1, NA),
z1H = ifelse(anchor1 == 1, z1, NA),
z2L = ifelse(anchor2 == 0, z2, NA),
z2H = ifelse(anchor2 == 1, z2, NA),
z3L = ifelse(anchor3 == 0, z3, NA),
z3H = ifelse(anchor3 == 1, z3, NA),
z4L = ifelse(anchor4 == 0, z4, NA),
z4H = ifelse(anchor4 == 1, z4, NA)
) %>%
select(VP, z1L:z4H) %>%
mutate(mean_zL = mean(c(z1L, z2L, z3L, z4L), na.rm = TRUE),
mean_zH = mean(c(z1H, z2H, z3H, z4H), na.rm = TRUE))
library("tidyverse")
library("reshape2")
library("ggplot2")
library("afex")
library("lme4")
# creating a fake data set
columns <- c("comparative_qu_1","abs_qu_1","anchor1","comparative_qu_2","abs_qu_2","anchor2","comparative_qu_3","abs_qu_3","anchor3","comparative_qu_4","abs_qu_4","anchor4")
VP <- c("A","B","C","D","E")
abs_qu_1 <- c(9000,7500,6000,10000,5000)
anchor1 <- c(1,1,0,1,0)
abs_qu_2 <- c(350, 500, 280, 600, 400)
anchor2 <- c(1,1,0,1,0)
abs_qu_3 <- c(17, 25, 50, 30, 45)
anchor3 <- c(0,0,1,0,1)
abs_qu_4 <- c(4,5,9,4,8)
anchor4 <- c(0,0,1,0,1)
# creating a data frame from the fake data
data <- data.frame(VP,abs_qu_1, anchor1, abs_qu_2, anchor2, abs_qu_3, anchor3, abs_qu_4, anchor4)
# z transform all answer based on the questions' mean
data$z1 <- scale(data$abs_qu_1)
data$z2 <- scale(data$abs_qu_2)
data$z3 <- scale(data$abs_qu_3)
data$z4 <- scale(data$abs_qu_4)
# save the z-scores in a new variable based on whether
# the anchor of the respective question has been low or high
# setting those variable to NA where the other anchor has been given
data <- data %>%
rowwise() %>%
mutate(
z1L = ifelse(anchor1 == 0, z1, NA),
z1H = ifelse(anchor1 == 1, z1, NA),
z2L = ifelse(anchor2 == 0, z2, NA),
z2H = ifelse(anchor2 == 1, z2, NA),
z3L = ifelse(anchor3 == 0, z3, NA),
z3H = ifelse(anchor3 == 1, z3, NA),
z4L = ifelse(anchor4 == 0, z4, NA),
z4H = ifelse(anchor4 == 1, z4, NA)
) %>%
select(VP, z1L:z4H) %>%
mutate(mean_zL = mean(c(z1L, z2L, z3L, z4L), na.rm = TRUE),
mean_zH = mean(c(z1H, z2H, z3H, z4H), na.rm = TRUE))
#setting absolute answer to null such that they aren't displayed anymore,
#data$abs_qu_1 <- NULL
#data$abs_qu_2 <- NULL
#data$abs_qu_3 <- NULL
#data$abs_qu_4 <- NULL
# check for normality
diff <- data$mean_zH - data$mean_zL
shapiro.test(diff)
# paired t-test based on difference between z- scores
# from the low vs high anchor condition
t.test(data$mean_zL, y = data$mean_zH, alternative = "less",paired=TRUE)
#d <- melt(select(data, ) id="VP"), correct melting see data_plotting.R
#plotting
#ggplot(d, aes(variable, value)) + geom_boxplot() + xlab("Anchor") + ylab("z-scores") + ggtitle("Title")
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
#afex::mixed(response ~ anchor * knowldege_of_anchor + (1 | participant) + (1 | trial))
# code for data_preprocessing.R
# setting absolute answer to null such that they aren't displayed anymore
#data$abs_qu_1 <- NULL
#data$abs_qu_2 <- NULL
#data$abs_qu_3 <- NULL
#data$abs_qu_4 <- NULL
#data$abs_qu_5 <- NULL
#data$abs_qu_6 <- NULL
#data$abs_qu_7 <- NULL
#data$abs_qu_8 <- NULL
#data$abs_qu_9 <- NULL
#data$abs_qu_10 <- NULL
#data$abs_qu_11 <- NULL
#data$abs_qu_12 <- NULL
# creating a fake data set
columns <- c("comparative_qu_1","abs_qu_1","anchor1","comparative_qu_2","abs_qu_2","anchor2","comparative_qu_3","abs_qu_3","anchor3","comparative_qu_4","abs_qu_4","anchor4")
VP <- c("A","B","C","D","E")
abs_qu_1 <- c(9000,7500,6000,10000,5000)
anchor1 <- c(1,1,0,1,0)
abs_qu_2 <- c(350, 500, 280, 600, 400)
anchor2 <- c(1,1,0,1,0)
abs_qu_3 <- c(17, 25, 50, 30, 45)
anchor3 <- c(0,0,1,0,1)
abs_qu_4 <- c(4,5,9,4,8)
anchor4 <- c(0,0,1,0,1)
# creating a data frame from the fake data
data <- data.frame(VP,abs_qu_1, anchor1, abs_qu_2, anchor2, abs_qu_3, anchor3, abs_qu_4, anchor4)
View(data)
source('C:/Users/Sarah/Desktop/Uni/6. Semester/Experimental Psychology Lab/Anchor-Effect-Project/analyses/pilot/data_preprocessing_test.R')
source('C:/Users/Sarah/Desktop/Uni/6. Semester/Experimental Psychology Lab/Anchor-Effect-Project/analyses/pilot/data_preprocessing_test.R', echo=TRUE)
View(data)
View(data)
#d <- melt(select(data, ) id="VP"), correct melting see data_plotting.R
#plotting
#ggplot(d, aes(variable, value)) + geom_boxplot() + xlab("Anchor") + ylab("z-scores") + ggtitle("Title")
#d <- melt(select(data, ) id="VP"), correct melting see data_plotting.R
#plotting
#ggplot(d, aes(variable, value)) + geom_boxplot() + xlab("Anchor") + ylab("z-scores") + ggtitle("Title")
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(response ~ anchor * knowldege_of_anchor + (1 | participant) + (1 | trial))
library("tidyverse")
library("reshape2")
library("ggplot2")
library("afex")
library("lme4")
# creating a fake data set
columns <- c("comparative_qu_1","abs_qu_1","anchor1","comparative_qu_2","abs_qu_2","anchor2","comparative_qu_3","abs_qu_3","anchor3","comparative_qu_4","abs_qu_4","anchor4")
VP <- c("A","B","C","D","E")
abs_qu_1 <- c(9000,7500,6000,10000,5000)
anchor1 <- c(1,1,0,1,0)
abs_qu_2 <- c(350, 500, 280, 600, 400)
anchor2 <- c(1,1,0,1,0)
abs_qu_3 <- c(17, 25, 50, 30, 45)
anchor3 <- c(0,0,1,0,1)
abs_qu_4 <- c(4,5,9,4,8)
anchor4 <- c(0,0,1,0,1)
# creating a data frame from the fake data
data <- data.frame(VP,abs_qu_1, anchor1, abs_qu_2, anchor2, abs_qu_3, anchor3, abs_qu_4, anchor4)
# z transform all answer based on the questions' mean
data$z1 <- scale(data$abs_qu_1)
data$z2 <- scale(data$abs_qu_2)
data$z3 <- scale(data$abs_qu_3)
data$z4 <- scale(data$abs_qu_4)
# save the z-scores in a new variable based on whether
# the anchor of the respective question has been low or high
# setting those variable to NA where the other anchor has been given
data <- data %>%
rowwise() %>%
mutate(
z1L = ifelse(anchor1 == 0, z1, NA),
z1H = ifelse(anchor1 == 1, z1, NA),
z2L = ifelse(anchor2 == 0, z2, NA),
z2H = ifelse(anchor2 == 1, z2, NA),
z3L = ifelse(anchor3 == 0, z3, NA),
z3H = ifelse(anchor3 == 1, z3, NA),
z4L = ifelse(anchor4 == 0, z4, NA),
z4H = ifelse(anchor4 == 1, z4, NA)
) %>%
select(VP, z1L:z4H) %>%
mutate(mean_zL = mean(c(z1L, z2L, z3L, z4L), na.rm = TRUE),
mean_zH = mean(c(z1H, z2H, z3H, z4H), na.rm = TRUE))
#setting absolute answer to null such that they aren't displayed anymore,
#data$abs_qu_1 <- NULL
#data$abs_qu_2 <- NULL
#data$abs_qu_3 <- NULL
#data$abs_qu_4 <- NULL
# check for normality
diff <- data$mean_zH - data$mean_zL
shapiro.test(diff)
# paired t-test based on difference between z- scores
# from the low vs high anchor condition
t.test(data$mean_zL, y = data$mean_zH, alternative = "less",paired=TRUE)
View(data)
afex::mixed(response ~ anchor * knowledge + (1 | participant) + (1 | trial))
source('C:/Users/Sarah/Desktop/Uni/6. Semester/Experimental Psychology Lab/Project/Stats_test.R', echo=TRUE)
View(data)
data <- select(data,VP, anchor1, anchor2, anchor3, anchor4, knowledge, z1, z2, z3, z4)
View(data)
?melt
data_test <- melt(data, id="VP")
View(data_test)
data_test <- melt(data, id=c("VP","knowledge"))
row <- which(data_test$variable == "z1")
data_test2 <- data_test[which(data_test$variable == "z1")[1]:nrow(data_test)]
data_test2 <- data_test[which(data_test$variable == "z1")[1]:nrow(data_test), ]
View(data_test2)
data_test2 <- data_test[which(data_test$variable == "z1")[1]:nrow(data_test), ]$value
data_final <- cbind(data_test[1:(which(data_test$variable == "z1")[1]-1),],data_test2])
data_final <- cbind(data_test[1:(which(data_test$variable == "z1")[1]-1),],data_test2)
View(data_final)
data_test <- melt(data, id=c("VP","knowledge"), variable.name = "anchor")
View(data_test)
data_test <- melt(data, id=c("VP","knowledge"), value.name = "anchor")
View(data_test)
data_test2 <- data_test[which(data_test$variable == "z1")[1]:nrow(data_test), ]$anchor
View(data_final)
data_test2 <- data_test[which(data_test$variable == "z1")[1]:nrow(data_test), ]$anchor
data_final <- cbind(data_test[1:(which(data_test$variable == "z1")[1]-1),],data_test2)
View(data_final)
data_final <- rename("data_test2" = "z-score")
data_final <- rename(data_final,"data_test2" = "z-score")
data_final <- rename(data_final,"data_test2" = "z_score")
data_final <- rename(data_final,"data_test2" = "z_score")
data_final <- rename(data_final,"data_test2" = "zscore")
rename(data_final,"data_test2" = "zscore")
rename(data_final,"data_test2" = "zscore")
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data$response ~ anchor * knowledge + (1 | participant) + (1 | trial))
library(plyr)
rename(data_final,"data_test2" = "zscore")
library("plyr")
rename(data_final,"data_test2" = "zscore")
rename(data_final,c("data_test2" = "zscore"))
rename(data_final,c("data_test2" = "z score"))
View(data_final)
View(data_final)
data_final <- rename(data_final,c("data_test2" = "z score"))
data_final <- cbind(data_test[1:(which(data_test$variable == "z1")[1]-1),],data_test2)
data_final$variable <- NULL
data_final <- rename(data_final,c("data_test2" = "z score", "variable" = "trial"))
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data$response ~ anchor * knowledge + (1 | participant) + (1 | trial))
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data_final$response ~ data_final$anchor * data_final$knowledge + (1 | data_final$VP) + (1 | data_final$trial))
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data_final,data_final$response ~ data_final$anchor * data_final$knowledge + (1 | data_final$VP) + (1 | data_final$trial))
?mixed
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data_final$response ~ data_final$anchor * data_final$knowledge + (1 | data_final$VP) + (1 | data_final$trial), data_final)
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data_final$response ~ data_final$anchor * data_final$knowledge + (1 | data_final$VP) + (1 | data_final$trial), data_final, )
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data_final$response ~ data_final$anchor * data_final$knowledge + (1 | data_final$VP) + (1 | data_final$trial), data_final, )
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data_final$response ~ data_final$anchor * data_final$knowledge + (1 | data_final$VP) + (1 | data_final$trial), data_final )
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data_final$response ~ data_final$anchor * data_final$knowledge + (1 | data_final$VP) + (1 | data_final$trial), data=data_final )
View(data_final)
data_final <- cbind(data_test[1:(which(data_test$variable == "z1")[1]-1),],data_test2)
data_final$variable <- NULL
data_final <- rename(data_final,c("data_test2" = "z score", "variable" = "trial"))
source('C:/Users/Sarah/Desktop/Uni/6. Semester/Experimental Psychology Lab/Project/Stats_test.R', echo=TRUE)
data_test <- melt(data, id=c("VP","knowledge"), variable.name = "trial")
data_final <- cbind(data_test[1:(which(data_test$variable == "z1")[1]-1),],data_test2)
data_final <- cbind(data_test[1:(which(data_test$trial == "z1")[1]-1),],data_test2)
data_final <- rename(data_final,c("data_test2" = "z score", "value" = "anchor"))
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data_final$response ~ data_final$anchor * data_final$knowledge + (1 | data_final$VP) + (1 | data_final$trial), data=data_final )
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data_final$response ~ data_final$anchor * data_final$knowledge + (1 | data_final$VP) + (1 | data_final$trial), data=data_final, )
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data_final$response ~ data_final$anchor * data_final$knowledge + (1 | data_final$VP) + (1 | data_final$trial), data=data_final)
library("tidyverse")
library("reshape2")
library("ggplot2")
library("afex")
library("lme4")
library("plyr")
# creating a fake data set
columns <- c("comparative_qu_1","abs_qu_1","anchor1","comparative_qu_2","abs_qu_2","anchor2","comparative_qu_3","abs_qu_3","anchor3","comparative_qu_4","abs_qu_4","anchor4","knowledge")
VP <- c("A","B","C","D","E")
abs_qu_1 <- c(9000,7500,6000,10000,5000)
anchor1 <- c(1,1,0,1,0)
abs_qu_2 <- c(350, 500, 280, 600, 400)
anchor2 <- c(1,1,0,1,0)
abs_qu_3 <- c(17, 25, 50, 30, 45)
anchor3 <- c(0,0,1,0,1)
abs_qu_4 <- c(4,5,9,4,8)
anchor4 <- c(0,0,1,0,1)
knowledge <- c(0,0,1,1,0)
# creating a data frame from the fake data
data <- data.frame(VP,abs_qu_1, anchor1, abs_qu_2, anchor2, abs_qu_3, anchor3, abs_qu_4, anchor4, knowledge)
# z transform all answer based on the questions' mean
data$z1 <- scale(data$abs_qu_1)
data$z2 <- scale(data$abs_qu_2)
data$z3 <- scale(data$abs_qu_3)
data$z4 <- scale(data$abs_qu_4)
data <- select(data,VP, anchor1, anchor2, anchor3, anchor4, knowledge, z1, z2, z3, z4)
data_test <- melt(data, id=c("VP","knowledge"), variable.name = "trial")
data_test2 <- data_test[which(data_test$variable == "z1")[1]:nrow(data_test), ]$anchor
data_final <- cbind(data_test[1:(which(data_test$trial == "z1")[1]-1),],data_test2)
data_final$variable <- NULL
data_final <- rename(data_final,c("data_test2" = "z score", "value" = "anchor"))
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data_final$response ~ data_final$anchor * data_final$knowledge + (1 | data_final$VP) + (1 | data_final$trial), data=data_final)
View(data)
View(data_test)
data_test <- melt(data2, id=c("VP","knowledge"))#, variable.name = "trial")
data_test <- melt(data, id=c("VP","knowledge"))#, variable.name = "trial")
data_test <- melt(data, id=c("VP","knowledge"))
data_test <- melt(data, id=c("VP","knowledge"), variable.name = "trial")
library("plyr")
library("tidyverse")
library("reshape2")
library("ggplot2")
library("afex")
library("lme4")
# creating a fake data set
columns <- c("comparative_qu_1","abs_qu_1","anchor1","comparative_qu_2","abs_qu_2","anchor2","comparative_qu_3","abs_qu_3","anchor3","comparative_qu_4","abs_qu_4","anchor4","knowledge")
VP <- c("A","B","C","D","E")
abs_qu_1 <- c(9000,7500,6000,10000,5000)
anchor1 <- c(1,1,0,1,0)
abs_qu_2 <- c(350, 500, 280, 600, 400)
anchor2 <- c(1,1,0,1,0)
abs_qu_3 <- c(17, 25, 50, 30, 45)
anchor3 <- c(0,0,1,0,1)
abs_qu_4 <- c(4,5,9,4,8)
anchor4 <- c(0,0,1,0,1)
knowledge <- c(0,0,1,1,0)
# creating a data frame from the fake data
data <- data.frame(VP,abs_qu_1, anchor1, abs_qu_2, anchor2, abs_qu_3, anchor3, abs_qu_4, anchor4, knowledge)
# z transform all answer based on the questions' mean
data$z1 <- scale(data$abs_qu_1)
data$z2 <- scale(data$abs_qu_2)
data$z3 <- scale(data$abs_qu_3)
data$z4 <- scale(data$abs_qu_4)
data <- select(data,VP, anchor1, anchor2, anchor3, anchor4, knowledge, z1, z2, z3, z4)
data_test <- melt(data, id=c("VP","knowledge"), variable.name = "trial")
data_test2 <- data_test[which(data_test$trial == "z1")[1]:nrow(data_test), ]$anchor
data_final <- cbind(data_test[1:(which(data_test$trial == "z1")[1]-1),],data_test2)
data_final$variable <- NULL
data_final <- rename(data_final,c("data_test2" = "z score", "value" = "anchor"))
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data_final$response ~ data_final$anchor * data_final$knowledge + (1 | data_final$VP) + (1 | data_final$trial), data=data_final)
library("plyr")
library("tidyverse")
library("reshape2")
library("ggplot2")
library("afex")
library("lme4")
# creating a fake data set
columns <- c("comparative_qu_1","abs_qu_1","anchor1","comparative_qu_2","abs_qu_2","anchor2","comparative_qu_3","abs_qu_3","anchor3","comparative_qu_4","abs_qu_4","anchor4","knowledge")
VP <- c("A","B","C","D","E")
abs_qu_1 <- c(9000,7500,6000,10000,5000)
anchor1 <- c(1,1,0,1,0)
abs_qu_2 <- c(350, 500, 280, 600, 400)
anchor2 <- c(1,1,0,1,0)
abs_qu_3 <- c(17, 25, 50, 30, 45)
anchor3 <- c(0,0,1,0,1)
abs_qu_4 <- c(4,5,9,4,8)
anchor4 <- c(0,0,1,0,1)
knowledge <- c(0,0,1,1,0)
# creating a data frame from the fake data
data <- data.frame(VP,abs_qu_1, anchor1, abs_qu_2, anchor2, abs_qu_3, anchor3, abs_qu_4, anchor4, knowledge)
# z transform all answer based on the questions' mean
data$z1 <- scale(data$abs_qu_1)
data$z2 <- scale(data$abs_qu_2)
data$z3 <- scale(data$abs_qu_3)
data$z4 <- scale(data$abs_qu_4)
data <- select(data,VP, anchor1, anchor2, anchor3, anchor4, knowledge, z1, z2, z3, z4)
data_test <- melt(data, id=c("VP","knowledge"), variable.name = "trial")
data_test2 <- data_test[which(data_test$trial == "z1")[1]:nrow(data_test), ]$anchor
data_final <- cbind(data_test[1:(which(data_test$trial == "z1")[1]-1),],data_test2)
data_final$variable <- NULL
data_final <- rename(data_final,c("data_test2" = "z score", "value" = "anchor"))
# has to be melted beforehand; response is z-sores; anchor is high/low; knowledge of anchor is yes/no, paricipant is VP, trial is 1-12
afex::mixed(data_final$response ~ data_final$anchor * data_final$knowledge + (1 | data_final$VP) + (1 | data_final$trial), data=data_final)
View(data)
View(data)
setwd("C:/Users/Sarah/Desktop/Uni/6. Semester/Experimental Psychology Lab/Anchor-Effect-Project/data/pilot")
data <- read_csv("results_pilot.csv")
data_ttest <- data %>% filter(question == 1)
z_score <- scale(data_ttest$answer)
data_ttest <- cbind(data_ttest, z_score)
for (i in 2:12) {
question_i <- data %>% filter(question == i)
z_score <- scale(question_i$answer)
question_i <- cbind(question_i, z_score)
data_ttest <- rbind(data_ttest, question_i)
}
library("tidyverse")
library("reshape2")
library("ggplot2")
library("afex")
library("lme4")
library("plyr")
setwd("C:/Users/Sarah/Desktop/Uni/6. Semester/Experimental Psychology Lab/Anchor-Effect-Project/data/pilot")
data <- read_csv("results_pilot.csv")
data_ttest <- data %>% filter(question == 1)
z_score <- scale(data_ttest$answer)
data_ttest <- cbind(data_ttest, z_score)
for (i in 2:12) {
question_i <- data %>% filter(question == i)
z_score <- scale(question_i$answer)
question_i <- cbind(question_i, z_score)
data_ttest <- rbind(data_ttest, question_i)
}
hyp_1 <- t.test(data_ttest$z_score ~ data_ttest$anchor, paired = TRUE)
setwd("C:/Users/Sarah/Desktop/Uni/6. Semester/Experimental Psychology Lab/Anchor-Effect-Project/data/pilot")
data <- read_csv("results_pilot.csv")
data_ttest <- data %>% filter(question == 1)
z_score <- scale(data_ttest$answer)
data_ttest <- cbind(data_ttest, z_score)
for (i in 2:12) {
question_i <- data %>% filter(question == i)
z_score <- scale(question_i$answer)
question_i <- cbind(question_i, z_score)
data_ttest <- rbind(data_ttest, question_i)
}
hyp_1 <- t.test(data_ttest$z_score ~ data_ttest$anchor, paired = TRUE)
mean_zH <- mean(filter(data_ttest$anchor == 'high'))
high <- filter(data_ttest$anchor == 'high')
high <- filter(data$anchor == 'high')
high <- filter(data, anchor == 'high')
View(high)
high <- filter(data_ttest, anchor == 'high')
View(high)
mean_zH <- mean(high$z_score)
low <- filter(data_ttest, anchor == 'low')
mean_zL <- mena(low$z_score
mean_zL <- mena(low$z_score)
low <- filter(data_ttest, anchor == 'low')
mean_zL <- mena(low$z_score)
low <- filter(data_ttest, anchor == 'low')
mean_zL <- mean(low$z_score)
